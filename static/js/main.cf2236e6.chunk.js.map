{"version":3,"sources":["components/TodoTemplate.js","components/TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","todoReducer","state","action","type","concat","todo","map","id","done","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","TodoContext","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","CheckCircle","props","css","Text","Remove","TodoItemBlock","TodoItem","text","onClick","React","memo","TodoListBlock","TodoList","todos","CircleButton","lighten","darken","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf2236e6.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock =  styled.div`\n  width: 512px;\n  height: 80vh;\n\n  position: relative;\n  background: #fff;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0,0,0,.04);\n\n  margin: 0 auto;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction TodoTemplate({children}) {\n  return (\n    <TodoTemplateBlock>\n      {children}\n    </TodoTemplateBlock>\n  );\n}\n\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\n\nconst initialTodos = [\n  // {\n  //   id: 1,\n  //   text: '프로젝트 생성하기',\n  //   done: true\n  // },\n  // {\n  //   id: 2,\n  //   text: '컴포넌트 스타일링하기',\n  //   done: true\n  // },\n  // {\n  //   id: 3,\n  //   text: 'Context 만들기',\n  //   done: false\n  // },\n  // {\n  //   id: 4,\n  //   text: '기능 구현하기',\n  //   done: false\n  // }\n];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map(todo =>\n        todo.id === action.id? { ...todo, done: !todo.done } : todo\n      );\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandeled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\n\nexport function TodoProvider({children}) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  )\n}\n\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return useContext(TodoNextIdContext);\n}\n\nfunction TodoContext() {\n  return (\n    <div>\n    </div>\n  );\n}\n\nexport default TodoContext;","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from './TodoContext';\n\nconst TodoHeadBlock = styled.div`\n  padding: 30px 32px 24px 32px;\n  border-bottom: 1px solid #eee;\n  h2 {\n    margin: 0;\n    font-size: 1.75rem;\n    color: #000;\n  }\n  .day {\n    margin-top: 4px;\n    color: #8c8c8c;\n    font-size: 1.125rem;\n  }\n  .task-left {\n    color: #4419e0;\n    font-size: 1.125rem;\n    margin-top: 30px;\n    font-weight: bold;\n  }\n`;\n\nfunction TodoHead() {\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n  \n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  const dayName = today.toLocaleDateString('ko-KR', {\n    weekday: 'long'\n  });\n\n  return (\n    <TodoHeadBlock>\n      <h2>{dateString}</h2>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"task-left\">할 일 {undoneTasks.length}개 남음</div>\n    </TodoHeadBlock>\n  );\n}\n\nexport default TodoHead;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport { useTodoDispatch } from './TodoContext';\n\n\nconst CheckCircle = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 1.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 16px;\n  cursor: pointer;\n  ${props => props.done && css`\n    border: 1px solid #4419e0;\n    color: #4419e0;\n  `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 1.125rem;\n  color: #272727;\n  ${props => props.done && css`\n    color: #c2c2c2;\n  `}\n`;\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #fa5252;\n  }\n  opacity: 0;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n  &:hover {\n    ${Remove} {\n      opacity: 1;\n    }\n  }\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n\n  const onToggle = () => dispatch({\n    type: 'TOGGLE',\n    id\n  });\n  const onRemove = () => dispatch({\n    type: 'REMOVE',\n    id\n  });\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from './TodoContext';\nimport TodoItem from './TodoItem';\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px 40px 32px;\n  box-sizing: border-box;\n  overflow-y: auto;\n`;\n\nfunction TodoList() {\n  const todos = useTodoState();\n  return (\n    <TodoListBlock>\n      {todos.map(todo => \n        <TodoItem \n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n        />\n      )}\n    </TodoListBlock>\n  );\n}\n\nexport default TodoList;","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { lighten, darken } from 'polished';\nimport { useTodoDispatch, useTodoNextId } from './TodoContext';\n\nconst CircleButton = styled.div`\n  background: #4419e0;\n  &:hover {\n    background: ${lighten(.1, '#4419e0')};\n  }\n  &:active {\n    background: ${darken(.1, '#4419e0')};\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 70px;\n  height: 70px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 50px;\n\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  transform: translate(-50%, 50%);\n\n  color: #fff;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n  transition: .125s all ease-in;\n\n  ${props => props.open && css`\n    background: #fa5252;\n    &:hover {\n    background: ${lighten(.1, '#fa5252')};\n    }\n    &:active {\n      background: ${darken(.1, '#fa5252')};\n    }\n    transform: translate(-50%, 50%) rotate(45deg);\n  `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 30px 32px 60px 32px;\n  border-radius: 0 0 16px 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input autoFocus placeholder=\"할 일을 입력 후, Enter 를 누르세요\" onChange={onChange} value={value}/>\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n      \n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './components/TodoContext';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #eee;\n    height: 100vh;\n    h1 {\n      text-align: center;\n    }\n  }\n`;\n\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <h1>Todo List</h1>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}